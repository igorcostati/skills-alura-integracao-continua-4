name: CI/CD Pipeline

on:
  push:
    branches: ["*"]

jobs:
  build:
    runs-on: ubuntu-latest

    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build Docker image
      run: docker build -t myapp:latest .

    - name: Save Docker image to a tar file
      run: docker save myapp:latest -o myapp.tar

    - name: Upload Docker image as artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        name: myapp-image
        path: myapp.tar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download Docker image artifact
      uses: actions/download-artifact@v3.0.0
      with:
        name: myapp-image
        path: myapp.tar

    - name: Copy Docker image to EC2
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "myapp.tar"
        target: "~/myapp.tar"

    - name: Update and install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install docker.io -y
    
    - name: Start Docker service
      run: |
        sudo service docker start
        sudo usermod -a -G docker ec2-user

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          export HOST=${{ secrets.DBHOST }}
          export USER=${{ secrets.DBUSER }}
          export PASSWORD=${{ secrets.DBPASSWORD }}
          export DBNAME=${{ secrets.DBNAME }}
          export DBPORT=${{ secrets.DBPORT }}
          export PORT=8000
          docker --version
          docker load -i ~/myapp.tar
          docker stop myapp || true
          docker rm myapp || true
          docker run -d --name myapp -p 8080:8080 myapp:latest